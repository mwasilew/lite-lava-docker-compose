version: "3.4"

x-common-config: &common_config
  image: squadproject/squad:1.14
  volumes:
    - home:/app
  environment:
    - SQUAD_LOG_LEVEL=DEBUG
    - SQUAD_CELERY_BROKER_URL=amqp://rabbitmq
    - XDG_DATA_HOME=/app

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq

  squad-dbmigrate:
    container_name: squad-dbmigrate
    <<: *common_config
    command: squad-admin migrate
    deploy:
      restart_policy:
        condition: none

  squad-web:
    container_name: squad-web
    <<: *common_config
    command: squad --fast --bind 0.0.0.0:8000
    ports:
      - '8000:8000'
    depends_on:
    - lava-server

  squad-worker:
    container_name: squad-worker
    <<: *common_config
    command: squad-worker
    depends_on:
    - lava-server

  squad-listener:
    container_name: squad-listener
    <<: *common_config
    command: squad-listener
    depends_on:
    - lava-server

  squad-scheduler:
    container_name: squad-scheduler
    <<: *common_config
    command: squad-scheduler
    depends_on:
    - lava-server

  db:
    image: ${DC_POSTGRES_IMAGE}
    container_name: lava-server-db
    environment:
      POSTGRES_USER: lavaserver
      POSTGRES_PASSWORD: lavaserverdbpass
    volumes:
    - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  lava-server:
    container_name: lava-server
    image: ${DC_SERVER_IMAGE}
    volumes:
    - devices:/etc/lava-server/dispatcher-config/devices
    - health-checks:/etc/lava-server/dispatcher-config/health-checks
    - joboutput:/var/lib/lava-server/default/media/job-output
    - ./overlays/lava-server/etc/lava-server/instance.conf:/etc/lava-server/instance.conf:ro
    - ./overlays/lava-server/etc/lava-server/settings.conf:/etc/lava-server/settings.conf:ro
    - ./overlays/lava-server/etc/lava-server/lava-master:/etc/lava-server/lava-master:ro
    depends_on:
    - db
    environment:
      SERVICES: "lava-logs lava-master lava-publisher gunicorn"
      BIND: "--bind lava-server:8000"
    ports:
    - 5500:5500
    - 5556:5556
    - 5555:5555
    restart: unless-stopped

  apache2:
    container_name: apache2
    image: ${DC_SERVER_IMAGE}
    volumes:
    - ./overlays/lava-server/etc/apache2/sites-available/lava-server.conf:/etc/apache2/sites-available/lava-server.conf:ro
    depends_on:
    - lava-server
    environment:
      SERVICES: "apache2"
    ports:
    - 80:80
    restart: unless-stopped

  lava-dispatcher:
    container_name: lava-dispatcher
    #image: ${DC_DISPATCHER_IMAGE}
    build:
      context: ./lite-lava-dispatcher
      args:
        DC_DISPATCHER_IMAGE: ${DC_DISPATCHER_IMAGE}
    devices:
#    - /dev/kvm # needed for QEMU
    - /dev/net/tun # needed for QEMU
    security_opt:
    - apparmor:unconfined # needed for usb mass storage
    cap_add:
    - NET_ADMIN # needed for QEMU
    - SYS_ADMIN # needed for usb mass storage
    environment:
      DISPATCHER_HOSTNAME: "--hostname=lava-dispatcher"
      LOGGER_URL: "tcp://lava-server:5555"
      MASTER_URL: "tcp://lava-server:5556"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock # allow to use docker inside this container
    - /run/udev/control:/run/udev/control:ro # libudev expects it for udev events
    - /boot:/boot:ro
    - /lib/modules:/lib/modules:ro
    - ./test-images:/test-images:ro

  ser2net:
    container_name: lava-ser2net
    build:
      context: ./ser2net
    volumes:
    - type: bind
      source: ./ser2net/ser2net.conf
      target: /etc/ser2net.conf

volumes:
  db-data:
    name: lava-server-pgdata
  devices:
    name: lava-server-devices
  health-checks:
    name: lava-server-health-checks
  joboutput:
    name: lava-server-joboutput
  home:
    name: squad-home
